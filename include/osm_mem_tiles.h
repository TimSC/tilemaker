/*! \file */ 
#ifndef _OSM_MEM_TILES
#define _OSM_MEM_TILES

#include "tile_data.h"
#include "osm_store.h"

/**
	\brief OsmMemTiles stores OSM objects in memory and provides a vector of OutputObjectRef for specified tiles
	
	The input objects are generated by cppo5m. The output objects are sent to OsmMemTiles for storage.
*/
class OsmMemTiles : public TileDataSource
{
public:
	OsmMemTiles(uint baseZoom,
		const std::vector<std::string> &inputFiles,
		const class Config &config,
		const std::string &luaFile,
		const class LayerDefinition &layers,	
		const class TileDataSource &shpMemTiles);

	///This must be thread safe!
	virtual void GetTileData(TileCoordinates dstIndex, uint zoom, 
		std::vector<OutputObjectRef> &dstTile);

	virtual void AddObject(TileCoordinates index, OutputObjectRef oo);

	virtual uint GetBaseZoom();

	virtual bool GetAvailableTileExtent(Box &clippingBox, std::string &boxSource);

private:
	//This variables are generally safe for multiple threads to read, but not to write.

	class TileIndex tileIndex;
	const std::vector<std::string> inputFiles;
};

#endif //_OSM_MEM_TILES

